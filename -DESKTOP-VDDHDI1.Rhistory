set.seed(1732472)
#creating a list of random numbers to create the training and testing sets
ind <- sample(2, nrow(wifidata), replace=TRUE, prob=c(.65,.35))
#creating training and testing sets
wifidata.training <- wifidata[ind==1, 1:8]
wifidata.testing <- wifidata[ind==2, 1:8]
#creating the labels to test later
wifidata.trainLabels <- wifidata[ind==1,8]
wifidata.testLabels <- wifidata[ind==2,8]
#actually creating the model
wifidata_model <- knn(train = wifidata.training, test = wifidata.testing, cl = wifidata.trainLabels, k=3)
#creating a df for merging
TestLabelsDF <- data.frame(wifidata.testLabels)
#creating the full dataframe
merged <- data.frame(wifidata.testLabels, wifidata_model)
names <- colnames(wifidata.testing)
#merge the merge and testing dataset together.
finaldata <- cbind(wifidata.testing,merge)
View(wifidata.testing)
#setting a psudorandom seed
set.seed(1732472)
#creating a list of random numbers to create the training and testing sets
ind <- sample(2, nrow(wifidata), replace=TRUE, prob=c(.65,.35))
#creating training and testing sets
wifidata.training <- wifidata[ind==1, 1:8]
wifidata.testing <- wifidata[ind==2, 1:8]
#creating the labels to test later
wifidata.trainLabels <- wifidata[ind==1,8]
wifidata.testLabels <- wifidata[ind==2,8]
#actually creating the model
wifidata_model <- knn(train = wifidata.training, test = wifidata.testing, cl = wifidata.trainLabels, k=3)
#creating a df for merging
TestLabelsDF <- data.frame(wifidata.testLabels)
#creating the full dataframe
merged <- data.frame(wifidata.testLabels, wifidata_model)
names <- colnames(wifidata.testing)
#merge the merge and testing dataset together.
finaldata <- cbind(wifidata.testing ,merged)
#setting a psudorandom seed
set.seed(1732472)
#creating a list of random numbers to create the training and testing sets
ind <- sample(2, nrow(wifidata), replace=TRUE, prob=c(.65,.35))
#creating training and testing sets
wifidata.training <- wifidata[ind==1, 1:8]
wifidata.testing <- wifidata[ind==2, 1:8]
#creating the labels to test later
wifidata.trainLabels <- wifidata[ind==1,8]
wifidata.testLabels <- wifidata[ind==2,8]
#actually creating the model
wifidata_model <- knn(train = wifidata.training, test = wifidata.testing, cl = wifidata.trainLabels, k=3)
#creating a df for merging
TestLabelsDF <- data.frame(wifidata.testLabels)
#creating the full dataframe
merged <- data.frame(wifidata.testLabels, wifidata_model)
names <- colnames(wifidata.testing)
#merge the merge and testing dataset together.
finaldata <- cbind(wifidata.testing, merged)
names(finaldata) <- c(names, "observed room", "predicted room")
#setting a psudorandom seed
set.seed(1732472)
#creating a list of random numbers to create the training and testing sets
ind <- sample(2, nrow(wifidata), replace=TRUE, prob=c(.65,.35))
#creating training and testing sets
wifidata.training <- wifidata[ind==1, 1:8]
wifidata.testing <- wifidata[ind==2, 1:8]
#creating the labels to test later
wifidata.trainLabels <- wifidata[ind==1,8]
wifidata.testLabels <- wifidata[ind==2,8]
#actually creating the model
wifidata_model <- knn(train = wifidata.training, test = wifidata.testing, cl = wifidata.trainLabels, k=3)
#creating a df for merging
TestLabelsDF <- data.frame(wifidata.testLabels)
#creating the full dataframe
merged <- data.frame(wifidata.testLabels, wifidata_model)
names <- colnames(wifidata.testing)
#merge the merge and testing dataset together.
finaldata <- cbind(wifidata.testing, merged)
names(finaldata) <- c(names, "observed room", "predicted room")
head(finaldata)
CrossTable(x = data.testLabels, y = wifidata_model, prop.chisq=FALSE)
CrossTable(x = wifidata.testLabels, y = wifidata_model, prop.chisq=FALSE)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
rm(list=ls())
setwd("./spaceship-titanic/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(tidyverse)
library(caret)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
View(train1)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
summary(train1)
train2 <- train1 %>% select(-lastname, -firstname, -Transported)
dmy <- dummyVars(" ~ .", data = train2)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength))
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
test2 <- test1 %>% select(-lastname, -firstname)
dmy <- dummyVars(" ~ .", data = test2)
test3 <- data.frame(predict(dmy, newdata = test2))
write.csv(train3,"nonameTrain2.csv", row.names = FALSE)
write.csv(test3,"nonameTest2.csv", row.names = FALSE)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
summary(train1)
train2 <- train1 %>% select(-Transported)
dmy <- dummyVars(" ~ .", data = train2)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID))
test2 <- test1
dmy <- dummyVars(" ~ .", data = test2)
test3 <- data.frame(predict(dmy, newdata = test2))
View(train3)
View(test3)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
summary(train1)
train2 <- train1 %>% select(-Transported)
dmy <- dummyVars(" ~ .", data = train2)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
test2 <- test1
dmy <- dummyVars(" ~ .", data = test2)
test3 <- data.frame(predict(dmy, newdata = test2))
View(test3)
View(train3)
swrfenv <- load('Models\\swrf2Model.RData')
swrfenv
load('Models\\swrf2Model.RData')
load('Models\\swrf2Model.RData')
ggplot(swrfenv)
rm(list=ls())
load('Models\\swrf2Model.RData')
emitProgress
sourceWithProgress()
load("~/spaceship-titanic/Models/swrf2Model.RData")
View(emitProgress)
load("~/spaceship-titanic/Models/swrf2Model.RData")
ls()
readRenviron('Models\\swrf2Model.RData')
sourceWithProgress()
sourceWithProgress("Models\\swrf2Model.RData')
readRenviron('Models\\swrf2Model.RData')
x
sourceWithProgress("Models\\swrf2Model.RData")
sourceWithProgress("Models\\swrf2Model.RData")
sourceWithProgress("goodjobs\\ddajob.R")
View(emitProgress)
dir()
install.packages(("gbm"))
chooseCRANmirror()
install.packages("gbm")
rm(list=ls())
train <- read.csv("nonameTrain.csv")
test <- read.csv("nonameTest.csv")
library(tidyverse)
library(caret)
train$Transported = as.factor(train$Transported)
summary(train)
preProcValues <- preProcess(train, method = c("center", "scale"))
trainTransformed <- predict(preProcValues, train)
set.seed(1623)
vec <- createDataPartition(
y=trainTransformed$Transported,
p=.75,
list=FALSE
)
faketrain <- trainTransformed[vec,]
faketest <- trainTransformed[-vec,]
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
gbmFit1 <- train(Transported ~ ., data = faketrain,
method = "gbm",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
verbose = TRUE)
plsProbs <- predict(gbmFit1, newdata = faketest, type = "prob")
eldata <- plsProbs %>% mutate(prediction = True>False)
eldata$cake = ifelse(eldata$prediction==TRUE, "True", "False")
eldata$cake <- as.factor(eldata$cake)
merged <- mutate(eldata, Transported = faketest$Transported)
y <- confusionMatrix(data = merged$cake, reference = merged$Transported)
y
fileConn<- file("outputs\\MPLoutput.txt")
writeLines(toString(y), fileConn)
close(fileConn)
save.image(file='Models\\MPLModel.RData')
rm(list=ls())
load("Models\\MPLModel.RData")
ggplot(gbmFit1)
y
y = x("aaaaaaa aaaaaaaaaaa", "bbbbbbb bbbbbbbbbbb", "ccccccc ccccccccccc", "ddddddd ddddddddddd", "eeeeeee eeeeeeeeeee", "fffffff fffffffffff", "ggggggg ggggggggggg", "hhhhhhh hhhhhhhhhhh", "iiiiiii iiiiiiiiiii", "jjjjjjj jjjjjjjjjjj", "kkkkkkk kkkkkkkkkkk", "lllllll lllllllllll", "mmmmmmm mmmmmmmmmmm", "nnnnnnn nnnnnnnnnnn", "ooooooo ooooooooooo", "ppppppp ppppppppppp", "qqqqqqq qqqqqqqqqqq", "rrrrrrr rrrrrrrrrrr", "sssssss sssssssssss", "ttttttt ttttttttttt", "uuuuuuu uuuuuuuuuuu", "vvvvvvv vvvvvvvvvvv", "wwwwwww wwwwwwwwwww", "xxxxxxx xxxxxxxxxxx", "yyyyyyy yyyyyyyyyyy", "zzzzzzz zzzzzzzzzzz")
y = c("aaaaaaa aaaaaaaaaaa", "bbbbbbb bbbbbbbbbbb", "ccccccc ccccccccccc", "ddddddd ddddddddddd", "eeeeeee eeeeeeeeeee", "fffffff fffffffffff", "ggggggg ggggggggggg", "hhhhhhh hhhhhhhhhhh", "iiiiiii iiiiiiiiiii", "jjjjjjj jjjjjjjjjjj", "kkkkkkk kkkkkkkkkkk", "lllllll lllllllllll", "mmmmmmm mmmmmmmmmmm", "nnnnnnn nnnnnnnnnnn", "ooooooo ooooooooooo", "ppppppp ppppppppppp", "qqqqqqq qqqqqqqqqqq", "rrrrrrr rrrrrrrrrrr", "sssssss sssssssssss", "ttttttt ttttttttttt", "uuuuuuu uuuuuuuuuuu", "vvvvvvv vvvvvvvvvvv", "wwwwwww wwwwwwwwwww", "xxxxxxx xxxxxxxxxxx", "yyyyyyy yyyyyyyyyyy", "zzzzzzz zzzzzzzzzzz")
View(train)
rm(list=ls())
setwd("./spaceship-titanic/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(tidyverse)
library(caret)
y = c("aaaaaaa aaaaaaaaaaa", "bbbbbbb bbbbbbbbbbb", "ccccccc ccccccccccc", "ddddddd ddddddddddd", "eeeeeee eeeeeeeeeee", "fffffff fffffffffff", "ggggggg ggggggggggg", "hhhhhhh hhhhhhhhhhh", "iiiiiii iiiiiiiiiii", "jjjjjjj jjjjjjjjjjj", "kkkkkkk kkkkkkkkkkk", "lllllll lllllllllll", "mmmmmmm mmmmmmmmmmm", "nnnnnnn nnnnnnnnnnn", "ooooooo ooooooooooo", "ppppppp ppppppppppp", "qqqqqqq qqqqqqqqqqq", "rrrrrrr rrrrrrrrrrr", "sssssss sssssssssss", "ttttttt ttttttttttt", "uuuuuuu uuuuuuuuuuu", "vvvvvvv vvvvvvvvvvv", "wwwwwww wwwwwwwwwww", "xxxxxxx xxxxxxxxxxx", "yyyyyyy yyyyyyyyyyy", "zzzzzzz zzzzzzzzzzz")
View(train)
for (name in y){
train[nrow(train) + 1,] = train[nrow(train)]
train$Name[nrow(train)] = name
}
for (name in y){
train[nrow(train) + 1,] = train[nrow(train)]
train$Name[nrow(train),] = name
}
for (name in y){
train[nrow(train) + 1,] = train[nrow(train),]
train$Name[nrow(train),] = name
}
train$Name[nrow(train),] <- name
for (name in y){
print(name)
train[nrow(train) + 1,] = train[nrow(train),]
train$Name[nrow(train),] <- name
}
for (name in y){
print(name)
train[nrow(train) + 1,] = train[nrow(train),]
print(train$Name[nrow(train),])
train$Name[nrow(train),] <- name
}
for (name in y){
print(name)
train[nrow(train) + 1,] <- train[nrow(train),]
print(train$Name[nrow(train),])
train$Name[nrow(train),] <- name
}
print(name)
for (name in y){
print(name)
train[nrow(train) + 1,] <- train[nrow(train),]
print(train$Name[nrow(train)])
train$Name[nrow(train),] <- name
}
for (name in y){
print(name)
train[nrow(train) + 1,] <- train[nrow(train),]
train$Name[nrow(train)] <- name
}
rm(list=ls())
setwd("./spaceship-titanic/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(tidyverse)
library(caret)
y = c("aaaaaaa aaaaaaaaaaa", "bbbbbbb bbbbbbbbbbb", "ccccccc ccccccccccc", "ddddddd ddddddddddd", "eeeeeee eeeeeeeeeee", "fffffff fffffffffff", "ggggggg ggggggggggg", "hhhhhhh hhhhhhhhhhh", "iiiiiii iiiiiiiiiii", "jjjjjjj jjjjjjjjjjj", "kkkkkkk kkkkkkkkkkk", "lllllll lllllllllll", "mmmmmmm mmmmmmmmmmm", "nnnnnnn nnnnnnnnnnn", "ooooooo ooooooooooo", "ppppppp ppppppppppp", "qqqqqqq qqqqqqqqqqq", "rrrrrrr rrrrrrrrrrr", "sssssss sssssssssss", "ttttttt ttttttttttt", "uuuuuuu uuuuuuuuuuu", "vvvvvvv vvvvvvvvvvv", "wwwwwww wwwwwwwwwww", "xxxxxxx xxxxxxxxxxx", "yyyyyyy yyyyyyyyyyy", "zzzzzzz zzzzzzzzzzz")
for (name in y){
train[nrow(train) + 1,] <- train[nrow(train),]
train$Name[nrow(train)] <- name
}
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL) %>%
summary(train1)
train2 <- train1 %>% select(-Transported)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL) %>%
summary(train1)
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
summary(train1)
train2 <- train1 %>% select(-Transported)
dmy <- dummyVars(" ~ .", data = train2)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- train3[0,-25]
View(train3)
train3 <- data.frame(predict(dmy, newdata = train2))
train3 <- train3[0,nrow(train)-27]
train3$Transported = as.factor(train1$Transported)
train3 <- data.frame(predict(dmy, newdata = train2))
rm(list=ls())
setwd("./spaceship-titanic/")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(tidyverse)
library(caret)
y = c("aaaaaaa aaaaaaaaaaa", "bbbbbbb bbbbbbbbbbb", "ccccccc ccccccccccc", "ddddddd ddddddddddd", "eeeeeee eeeeeeeeeee", "fffffff fffffffffff", "ggggggg ggggggggggg", "hhhhhhh hhhhhhhhhhh", "iiiiiii iiiiiiiiiii", "jjjjjjj jjjjjjjjjjj", "kkkkkkk kkkkkkkkkkk", "lllllll lllllllllll", "mmmmmmm mmmmmmmmmmm", "nnnnnnn nnnnnnnnnnn", "ooooooo ooooooooooo", "ppppppp ppppppppppp", "qqqqqqq qqqqqqqqqqq", "rrrrrrr rrrrrrrrrrr", "sssssss sssssssssss", "ttttttt ttttttttttt", "uuuuuuu uuuuuuuuuuu", "vvvvvvv vvvvvvvvvvv", "wwwwwww wwwwwwwwwww", "xxxxxxx xxxxxxxxxxx", "yyyyyyy yyyyyyyyyyy", "zzzzzzz zzzzzzzzzzz")
for (name in y){
train[nrow(train) + 1,] <- train[nrow(train),]
train$Name[nrow(train)] <- name
}
train1 <- train %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
summary(train1)
train2 <- train1 %>% select(-Transported)
dmy <- dummyVars(" ~ .", data = train2)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- train3[0:nrow(train)-27,]
train3 <- top_n(train3,nrow(train3)-26)
train3[nrow(train3),]
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- top_n(train3,nrow(train3)-27)
train3[nrow(train3),]
train3 <- slicer(train3,0:844)
train3 <- slice(train3,0:844)
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- slice(train3,0:8692)
train3[nrow(train3),]
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- slice(train3,0:8693)
train3[nrow(train3),]
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- slice(train3,0:8694)
train3[nrow(train3),]
train3 <- data.frame(predict(dmy, newdata = train2))
train3$Transported = as.factor(train1$Transported)
train3 <- slice(train3,0:8693)
train3[nrow(train3),]
for (name in y){
test[nrow(train) + 1,] <- test[nrow(train),]
test$Name[nrow(train)] <- name
}
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
test2 <- test1
dmy <- dummyVars(" ~ .", data = test2)
test3 <- data.frame(predict(dmy, newdata = test2))
test3 <- slice(test3,0:8694)
for (name in y){
test[nrow(test) + 1,] <- test[nrow(test),]
test$Name[nrow(test)] <- name
}
test1 <- test %>% separate(PassengerId, into=c("firstID", "secondID"), sep = "_") %>%
separate(Name, into = c("firstname", "lastname"), sep=" ") %>%
mutate(firstnamelength = nchar(firstname), lastnamelength = nchar(lastname)) %>%
mutate(hadRS = is.na(RoomService), hadFC = is.na(FoodCourt), hadSPA = is.na(Spa), hadMALL = is.na(ShoppingMall), hadVR = is.na(VRDeck)) %>%
mutate(RoomService = ifelse(is.na(RoomService), 0, RoomService), FoodCourt = ifelse(is.na(FoodCourt), 0, FoodCourt), Spa = ifelse(is.na(Spa), 0, Spa), ShoppingMall = ifelse(is.na(ShoppingMall), 0, ShoppingMall), VRDeck = ifelse(is.na(VRDeck), 0, VRDeck), Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
separate(Cabin, into = c("deck", "num", "side"), sep = "/") %>%
mutate(firstID = as.numeric(firstID), secondID = as.numeric(secondID), num = as.numeric(num)) %>%
mutate(is_homeless = ifelse(is.na(num), "True", "False")) %>%
mutate(is_homeless = as.factor(is_homeless), num = ifelse(is.na(num), -1, num), side = ifelse(is.na(side), "TrashCompactor", side)) %>%
mutate(lastnamelength = ifelse(is.na(lastnamelength), 0, lastnamelength)) %>%
group_by(firstID) %>% mutate(group_size = max(secondID)) %>%
separate(firstname, into=c("firstspace","first1", "first2", "first3", "first4", "first5", "first6", "first7"), sep = "") %>%
separate(lastname, into=c("lastspace", "last1", "last2", "last3", "last4", "last5", "last6", "last7", "last8", "last9", "last10", "last11"), sep = "") %>%
mutate(firstspace = NULL, lastspace = NULL)
test2 <- test1
dmy <- dummyVars(" ~ .", data = test2)
test3 <- data.frame(predict(dmy, newdata = test2))
test3 <- slice(test3,0:8694)
write.csv(train3,"withnameTrain2.csv", row.names = FALSE)
write.csv(test3,"withnameTest2.csv", row.names = FALSE)
